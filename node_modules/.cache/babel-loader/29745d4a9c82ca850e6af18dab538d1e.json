{"ast":null,"code":"var _jsxFileName = \"/Users/ashikurrahman/Desktop/01-starting-project/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" please enter a valid postalCode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"Fc051uQnNz1aWp3XsaoL1wV/JgI=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/ashikurrahman/Desktop/01-starting-project/src/components/Cart/Checkout.js"],"names":["React","useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid,\n    });\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid &&\n      enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p> please enter a valid name</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.street ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p> please enter a valid street</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.postalCode ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p> please enter a valid postalCode</p>\n        )}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p> please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}